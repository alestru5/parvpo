worker_processes 1;  # Количество рабочих процессов Nginx

events {
    worker_connections 1024;  # Максимальное количество одновременных соединений для каждого рабочего процесса
}

http {
    # Определение upstream серверов для каждого сервиса
    upstream order_service {
        server order-service:5000;  # Адрес и порт сервиса заказов
    }

    upstream inventory_service {
        server inventory-service:5001;  # Адрес и порт сервиса инвентаря
    }

    upstream notification_service {
        server notification-service:5002;  # Адрес и порт сервиса уведомлений
    }

    server {
        listen 80 http2;  # Nginx будет слушать на порту 80 с поддержкой HTTP/2

        # Проксирование запросов к сервису заказов
        location /order {
            grpc_pass grpc://order_service;  # Проксирование gRPC запросов к сервису заказов
            grpc_set_header Host $host;  # Установка заголовка Host
            grpc_set_header X-Real-IP $remote_addr;  # Установка заголовка X-Real-IP
            grpc_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Установка заголовка X-Forwarded-For
            grpc_set_header X-Forwarded-Proto $scheme;  # Установка заголовка X-Forwarded-Proto
            grpc_read_timeout 300s;  # Таймаут на чтение данных
            grpc_send_timeout 300s;  # Таймаут на отправку данных
            grpc_socket_keepalive on;  # Включение keep-alive для соединений
            grpc_next_upstream error timeout invalid_header http_502 http_503 http_504;  # Условия для перенаправления запроса на следующий upstream сервер
        }

        # Проксирование запросов к сервису инвентаря
        location /inventory {
            grpc_pass grpc://inventory_service;  # Проксирование gRPC запросов к сервису инвентаря
            grpc_set_header Host $host;  # Установка заголовка Host
            grpc_set_header X-Real-IP $remote_addr;  # Установка заголовка X-Real-IP
            grpc_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Установка заголовка X-Forwarded-For
            grpc_set_header X-Forwarded-Proto $scheme;  # Установка заголовка X-Forwarded-Proto
            grpc_read_timeout 300s;  # Таймаут на чтение данных
            grpc_send_timeout 300s;  # Таймаут на отправку данных
            grpc_socket_keepalive on;  # Включение keep-alive для соединений
            grpc_next_upstream error timeout invalid_header http_502 http_503 http_504;  # Условия для перенаправления запроса на следующий upstream сервер
        }

        # Проксирование запросов к сервису уведомлений
        location /notification {
            grpc_pass grpc://notification_service;  # Проксирование gRPC запросов к сервису уведомлений
            grpc_set_header Host $host;  # Установка заголовка Host
            grpc_set_header X-Real-IP $remote_addr;  # Установка заголовка X-Real-IP
            grpc_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Установка заголовка X-Forwarded-For
            grpc_set_header X-Forwarded-Proto $scheme;  # Установка заголовка X-Forwarded-Proto
            grpc_read_timeout 300s;  # Таймаут на чтение данных
            grpc_send_timeout 300s;  # Таймаут на отправку данных
            grpc_socket_keepalive on;  # Включение keep-alive для соединений
            grpc_next_upstream error timeout invalid_header http_502 http_503 http_504;  # Условия для перенаправления запроса на следующий upstream сервер
        }
    }
}
